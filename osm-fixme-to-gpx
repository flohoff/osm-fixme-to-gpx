#!/usr/bin/perl -w

package GPX;
	use strict;
	use utf8;
	use feature 'signatures';
	no warnings 'experimental::signatures';

	use XML::TreePP;

	sub new($class) {
		my $self={};
		bless $self, $class;
		return $self;
	}

	sub waypoint_add($self, $point) {
		push @{$self->{wp}}, $point;
	}

	sub save($self, $filename) {
		my @wp = map {
				{
					-lat => $_->{lat},
					-lon => $_->{lon},
					name => $_->{name}
				};
 		} @{$self->{wp}};

		my $tpp=new XML::TreePP( force_array => [ 'wpt' ]);
		my $tree = { gpx => {
				"-xmlns:xsd" => "http://www.w3.org/2001/XMLSchema",
				"-xmlns:xsi" => "http://www.w3.org/2001/XMLSchema-instance",
				"-xsi:schemaLocation" => "http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd",
				"-xmlns" => "http://www.topografix.com/GPX/1/0",
				"-version" => "1.0",
				"-creator" => "osm-fixme-to-gpx",
				wpt => \@wp
			}
		};
		my $xml=$tpp->writefile($filename, $tree);
	}
1;

use strict;
use utf8;
use feature 'signatures';
no warnings 'experimental::signatures';
use open IO => ":encoding(utf-8)";
use open ':std';

use Getopt::Long::Descriptive;
use FindBin qw($Bin);
use lib "$Bin/../lib";

use Geo::Parse::OSM;

my ($opt, $usage) = describe_options(
        '$Bin %o <some-arg>',
        [ 'infile|i=s',		"OSM input file", { required => 1 } ],
        [ 'outfile|o=s',	"GPX output file", { required => 1 } ],
        [],
        [ 'help',               "print usage message and exit", { shortcircuit => 1 } ],
);

print($usage->text), exit if $opt->help;

my $osm = Geo::Parse::OSM->new($opt->infile);
my $gpx = new GPX();

$osm->parse( sub {
	my $n=$_[0];
	if (!defined($n->{tag}{fixme})) {
		return;
	}

	my $point = {
		lat => $n->{lat},
		lon => $n->{lon},
		name => $n->{tag}{fixme}
	};

	$gpx->waypoint_add($point);
}, only => 'node' );

$gpx->save($opt->outfile);
